@model Crowdfunding.Data.Models.Project

<head>
    <link href="~/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="~/css/style.css" rel="stylesheet" type="text/css" />
    <script src="~/js/jquery-3.3.1.min.js" type="text/javascript"></script>
    <script src="~/js/bootstrap.min.js" type="text/javascript"></script>
</head>

<h2>Create new project</h2>

@using (Html.BeginForm())
{
    <div class="editor-field invisible">
        @Html.EditorFor(model => model.CategoryId)
    </div>
    @Html.LabelFor(model => model.Name, "Name")
    <br />
    @Html.EditorFor(model => model.Name)
    <br />
    @Html.LabelFor(model => model.CategoryId, "Category")
    <br />
    <select id="categories" name="categories" onchange="selectCategory()">
        <option value="">Select Category</option>
        <option>Music</option>
        <option>VideoGames</option>
    </select>
    <br />
    @Html.LabelFor(model => model.ShortDescription, "ShortDescription")
    <br />
    @Html.EditorFor(model => model.ShortDescription)
    <br />
    @Html.LabelFor(model => model.LongDescription, "LongDescription")
    <br />
    @Html.EditorFor(model => model.LongDescription)
    <div class="editor-field invisible">
        @Html.EditorFor(model => model.Img)
    </div>
    <div id="drop-area">
        <div class="my-form">
            <p>Chose your image or drag it into this area</p>
            <input type="file" id="fileElem" multiple accept="image/*" onchange="handleFiles(this.files)">
            <label class="button" for="fileElem">Chose</label>
        </div>
        <div id="gallery"></div>
    </div>
    <br />
    <input type="submit" value="Create" />
}
<script src="~/js/jquery-3.3.1.min.js"></script>
<script src="~/js/bootstrap.min.js"></script>

<style>
    #drop-area {
        border: 2px dashed #ccc;
        border-radius: 20px;
        width: 480px;
        font-family: sans-serif;
        padding: 20px;
    }

        #drop-area.highlight {
            border-color: purple;
        }

    p {
        margin-top: 0;
    }

    .my-form {
        margin-bottom: 10px;
    }

    #gallery {
        margin-top: 10px;
    }

        #gallery img {
            width: 150px;
            margin-bottom: 10px;
            margin-right: 10px;
            vertical-align: middle;
        }

    .button {
        display: inline-block;
        padding: 10px;
        background: #ccc;
        cursor: pointer;
        border-radius: 5px;
        border: 1px solid #ccc;
    }

        .button:hover {
            background: #ddd;
        }

    #fileElem {
        display: none;
    }
</style>

<script src="~/js/bootstrap.min.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script type="text/javascript">
    let dropArea = document.getElementById('drop-area')

    ;['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        dropArea.addEventListener(eventName, preventDefaults, false)
    })

    function preventDefaults(e) {
        e.preventDefault()
        e.stopPropagation()
    }

    ;['dragenter', 'dragover'].forEach(eventName => {
        dropArea.addEventListener(eventName, highlight, false)
    })

    ;['dragleave', 'drop'].forEach(eventName => {
        dropArea.addEventListener(eventName, unhighlight, false)
    })

    function highlight(e) {
        dropArea.classList.add('highlight')
    }

    function unhighlight(e) {
        dropArea.classList.remove('highlight')
    }

    dropArea.addEventListener('drop', handleDrop, false)

    function handleDrop(e) {
        let dt = e.dataTransfer
        let files = dt.files
        handleFiles(files)
    }

    function handleFiles(files) {
        files = [...files]
        files.forEach(uploadFile)
        files.forEach(previewFile)
    }

    function uploadFile(file) {
        var url = 'https://api.cloudinary.com/v1_1/hvalovyura/upload'
        var preset = 'rqicmjup'
        var formData = new FormData()
        formData.append('file', file);
        formData.append('upload_preset', preset);

        axios({
            url: url,
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            data: formData
        })
            .then(function (res) {
                document.getElementById('@Html.IdFor(model => model.Img)').value = res.data.secure_url;
                alert(res.data.secure_url);
            })
            .catch(function (err) {
                alert("ERROR!!!!");
            });
    }

    function previewFile(file) {
        let reader = new FileReader()
        reader.readAsDataURL(file)
        reader.onloadend = function () {
            let img = document.createElement('img')
            img.src = reader.result
            document.getElementById('gallery').appendChild(img)
        }
    }
</script>

<script type="text/javascript">
    function selectCategory() {
        if (document.getElementById('categories').value == "Music") {
            document.getElementById('@Html.IdFor(model => model.CategoryId)').value = 1;
        }
        else if (document.getElementById('categories').value == "VideoGames") {
            document.getElementById('@Html.IdFor(model => model.CategoryId)').value = 2;
        }
    }
</script>